@page "/categorias"
@using Aula03.Models
@inject HttpClient Http

<div class="container my-5">
    <h3 class="text-center mb-4">Lista de Categorias</h3>

    @if (categorias == null)
    {
        <p>Carregando categorias...</p>
    }
    else if (!categorias.Any())
    {
        <p>Nenhuma categoria cadastrada.</p>
    }
    else
    {
        <table class="table table-striped">
            <thead>
                <tr>
                    <th>Nome</th>
                    <th>Descrição</th>
                    <th>Ações</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var categoria in categorias)
                {
                    <tr>
                        <td>@categoria.Name</td>
                        <td>@categoria.Description</td>
                        <td>
                            <button class="btn btn-warning" @onclick="() => EditarCategoria(categoria.CategoryID)">Editar</button>
                            <button class="btn btn-danger" @onclick="() => RemoverCategoria(categoria.CategoryID)">Remover</button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }

    <button class="btn btn-primary" @onclick="CriarCategoria">Cadastrar Nova Categoria</button>
</div>

@code {
    private List<CategoryModel> categorias = new List<CategoryModel>();

    protected override async Task OnInitializedAsync()
    {
        await CarregarCategorias();
    }

    private async Task CarregarCategorias()
    {
        categorias = await Http.GetFromJsonAsync<List<CategoryModel>>("api/categories");
    }

    private async Task RemoverCategoria(int id)
    {
        var confirmResult = await Task.Run(() => 
            confirm("Tem certeza que deseja remover esta categoria?"));
        
        if (confirmResult)
        {
            var response = await Http.DeleteAsync($"api/categories/{id}");
            if (response.IsSuccessStatusCode)
            {
                await CarregarCategorias(); // Atualiza a lista após remoção
            }
            else
            {
                // Lidar com erro de remoção, exibir mensagem se necessário
            }
        }
    }

    private void EditarCategoria(int id)
    {
        // Navegar para o formulário de edição
        NavigationManager.NavigateTo($"/editar-categoria/{id}");
    }

    private void CriarCategoria()
    {
        // Navegar para o formulário de criação
        NavigationManager.NavigateTo("/cadastro-categoria");
    }
}
